<?xml version="1.0" ?>
<cherrytree>
	<node custom_icon_id="0" foreground="" is_bold="True" name="Game Engine Documentaion" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1587970734.47" ts_lastsave="1587997979.19" unique_id="1">
		<rich_text>This is the official documentaion for my game engine, definition and use of all classes is </rich_text>
		<node custom_icon_id="0" foreground="" is_bold="False" name="Components" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1587970934.84" ts_lastsave="1587970944.72" unique_id="2">
			<rich_text></rich_text>
			<node custom_icon_id="0" foreground="" is_bold="False" name="GameObject" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1587970944.72" ts_lastsave="1588091363.99" unique_id="3">
				<rich_text>class </rich_text>
				<rich_text link="node 3">GameObject</rich_text>
				<rich_text>

    The base class for all objects that can exists in the game loop
    
    
</rich_text>
				<rich_text underline="single" weight="heavy">Attributes</rich_text>
				<rich_text weight="heavy">:</rich_text>
				<rich_text>

    Public:
    
    Private:
      •   Image sprite
            The image that will act as the sprite
    
    
    
</rich_text>
				<rich_text underline="single" weight="heavy">Methods</rich_text>
				<rich_text weight="heavy">:</rich_text>
				<rich_text>

    Public:
      •   GameObject(Image sprite)
            Gameobject constructor 
            </rich_text>
				<rich_text style="italic">sprite</rich_text>
				<rich_text> is the image that is to be rendered as the main sprite for the game object. in case it is not provided, </rich_text>
				<rich_text underline="single">sprite</rich_text>
				<rich_text> attribute will be set to null and no image will be rendered
            
      •  Image getSprite()
            Returns the Image object that contains the sprite to be rendered
</rich_text>
			</node>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="Engine" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1587990207.12" ts_lastsave="1587990418.52" unique_id="4">
			<rich_text></rich_text>
			<node custom_icon_id="0" foreground="" is_bold="False" name="RenderEngine" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1587990418.52" ts_lastsave="1587991108.2" unique_id="5">
				<rich_text weight="heavy">class </rich_text>
				<rich_text link="node 5" weight="heavy">RenderEngine</rich_text>
				<rich_text>

extends JFrame
    
The main class that controls display and the flow of the game loop



</rich_text>
				<rich_text underline="single" weight="heavy">Attributes</rich_text>
				<rich_text weight="heavy">:</rich_text>
				<rich_text>

    Public:
    
    Private:
    
    
    
</rich_text>
				<rich_text underline="single" weight="heavy">Methods</rich_text>
				<rich_text weight="heavy">:</rich_text>
				<rich_text>

    Public:
         • RenderEngine()
                The default constructor for the class
    
    Private:
         • setUpEngine()
                sets up some defualt aspects of JFrame includeing windows size, visibility, on close function 
</rich_text>
			</node>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="Template" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1587997979.19" ts_lastsave="1587997993.62" unique_id="6">
			<rich_text>class </rich_text>
			<rich_text link="node 3">GameObject</rich_text>
			<rich_text>

    The base class for all objects that can exists in the game loop
    
    
</rich_text>
			<rich_text underline="single" weight="heavy">Attributes</rich_text>
			<rich_text weight="heavy">:</rich_text>
			<rich_text>

    Public:
    
    Private:
    
    
    
</rich_text>
			<rich_text underline="single" weight="heavy">Methods</rich_text>
			<rich_text weight="heavy">:</rich_text>
			<rich_text>

    Public:
         • RenderEngine()
                The default constructor for the class
    
    Private:
         • setUpEngine()
                sets up some defualt aspects of JFrame includeing windows size, visibility, on close function 
</rich_text>
		</node>
	</node>
</cherrytree>
